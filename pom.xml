<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.cti.ftpServiceSystem</groupId><!-- 包:定义当前Maven项目隶属项目 --> 
  <artifactId>ftpServiceSystem</artifactId><!-- 资源项目名 :定义实际项目中的一个模块--> 
  <packaging>war</packaging><!-- 定义该项目的打包方式，默认jar，还可以是war、jar、ear -->
  <version>0.0.1-SNAPSHOT</version><!-- 版本号:定义当前项目的当前版本 --> 
  <name>ftpServiceSystem Maven Webapp</name><!-- 打包项目名 -->
  <url>http://maven.apache.org</url>
  
  <properties>
    <!-- springframe 版本控制 -->
    <spring.version>4.1.1.RELEASE</spring.version>
    <cxf.version>2.7.11</cxf.version>
  </properties>
  
  <dependencies>
    <dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>3.1.0</version>
		<scope>provided</scope>
	</dependency>
	<dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-frontend-jaxws</artifactId>
		<version>${cxf.version}</version>
	</dependency>

	<dependency>
		<groupId>org.apache.cxf</groupId>
		<artifactId>cxf-rt-transports-http</artifactId>
		<version>${cxf.version}</version>
	</dependency>
	<!-- Jetty is needed if you're are not using the CXFServlet -->
    <dependency>
       <groupId>wsdl4j</groupId>
       <artifactId>wsdl4j</artifactId>
       <version>1.6.3</version>
    </dependency>
	<dependency>
	    <groupId>org.apache.ws.xmlschema</groupId>
	    <artifactId>xmlschema-core</artifactId>
	    <version>2.0.3</version>
	</dependency>
    <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.17</version>
    </dependency>
    <dependency>
	    <groupId>commons-logging</groupId>
	    <artifactId>commons-logging</artifactId>
	    <version>1.2</version>
	</dependency>
	<dependency>
	    <groupId>commons-net</groupId>
	    <artifactId>commons-net</artifactId>
	    <version>3.6</version>
	</dependency>
    <dependency>
	    <groupId>org.apache.neethi</groupId>
	    <artifactId>neethi</artifactId>
	    <version>3.0.3</version>
	</dependency>
	
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-beans</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-context</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-core</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-web</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-expression</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
    </dependency>
	<dependency>  
    	<groupId>org.quartz-scheduler</groupId>  
    	<artifactId>quartz</artifactId>  
   	 	<version>2.2.1</version>  
	</dependency>  
	<dependency>  
    	<groupId>org.quartz-scheduler</groupId>  
   	 	<artifactId>quartz-jobs</artifactId>  
    	<version>2.2.1</version>  
	</dependency>  
    <dependency>
	  	<groupId>junit</groupId>
	 	 <artifactId>junit</artifactId>
	  	<version>4.11</version>
	 	 <scope>test</scope>
	</dependency>
	<dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>1.6.1</version>
    </dependency>
    <dependency> 
     <groupId>jftp</groupId> 
     <artifactId>my-tools</artifactId> 
     <version>1.50</version> 
     <type>jar</type> 
     <scope>system</scope> 
     <systemPath>${basedir}/lib/jftp.jar</systemPath> 
    </dependency>
    <dependency>
    <groupId>org.apache.axis</groupId>
    <artifactId>axis</artifactId>
    <version>1.4</version>
    </dependency>
   <dependency>
    <groupId>wsdl4j</groupId>
    <artifactId>wsdl4j</artifactId>
    <version>1.6.2</version>
  </dependency>
<dependency>
    <groupId>axis</groupId>
    <artifactId>axis-saaj</artifactId>
    <version>1.2.1</version>
</dependency>
   <dependency>
    <groupId>axis</groupId>
    <artifactId>axis-ant</artifactId>
    <version>1.4</version>
</dependency>
<dependency>
    <groupId>javax.xml</groupId>
    <artifactId>jaxrpc</artifactId>
    <version>1.1</version>
</dependency>
<dependency>
    <groupId>javax.mail</groupId>
    <artifactId>mail</artifactId>
    <version>1.4.7</version>
</dependency>
<dependency>
    <groupId>xml-security</groupId>
    <artifactId>xmlsec</artifactId>
    <version>1.3.0</version>
</dependency>
<dependency>
    <groupId>commons-discovery</groupId>
    <artifactId>commons-discovery</artifactId>
    <version>0.5</version>
</dependency>
<dependency>
    <groupId>org.apache.cxf</groupId>
    <artifactId>cxf-rt-transports-http-jetty</artifactId>
    <version>3.1.6</version>
</dependency>
  </dependencies>
  <!-- #####Project Build ###-->
  <build>
    <!-- ###########给出构建过程中所用到的插件start######## -->
    <plugins>
      <!-- 由于maven默认使用的jdk与工程配置的jdk版本不一致，导致无法编译通过，通过该插件指定jdk版本 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <!-- maven-surefire-plugin 是maven里执行测试用例的插件，不显示配置就会用默认配置。这个插件的 surefire:test 命令会默认绑定maven执行的 test 阶段 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- 跳过测试单元 true:跳过测试，false不跳过（默认）-->
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
    <!-- ###########给出构建过程中所用到的插件end######## -->
  </build>
 
</project>
